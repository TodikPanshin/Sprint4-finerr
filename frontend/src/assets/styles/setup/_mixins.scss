/* Breakpoint mixins */

@mixin for-mobile-layout {
    @media (max-width: $padded-break-mobile) {
        @content;
    }
}

@mixin for-narrow-layout {
    @media (min-width: $padded-break-narrow) {
        @content;
    }
}

@mixin for-normal-layout {
    @media (min-width: $padded-break-normal) {
        @content;
    }
}

@mixin for-first-break-layout {
    @media (min-width: $padded-first-breakpoint) {
        @content;
    }
}

@mixin for-wide-layout {
    @media (min-width: $padded-break-wide) {
        @content;
    }
}

// FOR MAIN LAYOUT
@mixin layoutGTC($max, $padding) {
    grid-template-columns:
        minmax($padding, 1fr) minmax(auto, $max) minmax($padding, 1fr);
}


/* Media  Mixins */
@mixin aspect-ratio($width, $height) {
    position: relative;
    overflow: hidden;

    &::before {
        display: block;
        content: "";
        width: 100%;
        padding-top: calc(($height / $width) * 100%);
    }

    >* {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
    }

    >img {
        height: 100%;
        object-fit: cover;
    }
}


// Buttons

@mixin btn($type: regular, $bg: $clr1, $clr: $clr-font, $padding: em(5px) em(10px)) {
    border: 0;
    font-size: em(14px);
    padding: $padding;
    font-weight: 600;
    width: auto;
    margin: 5px;
    border: 1px $clr-font solid;
    border-radius: rem(4px);
    transition: 0.2s;
    cursor: pointer;


    @if $type ==regular {
        background-color: $bg;
        color: $clr;

        &:hover {
            color: $clr-btn-hov;
        }
    }

    @else if $type ==header-btn {
        background-color: $bg;
        color: $clr-hov;

        &:hover {
            background-color: $clr-btn-hov;
            color: $clr1;
        }
    }

    @else if $type ==hero-btn {
        background-color: transparent;
        color: $clr1;

        &:hover {
            background-color: $clr-btn-hov;
            color: $clr1;
        }
    }

    @else if $type ==main-filter {
        background-color: $bg;
        color: $clr;
        border-radius: 2rem;

        &:hover {
            border: 1px $clr-btn-search solid;
        }

    }

    @else if $type ==gig-contact {
        background-color: $bg;
        color: $clr;
        padding: 12px 24px;

        &:hover {
            background-color: $clr-font-dark;
            color: $clr1;
        }
    }

    @else if $type ==black {
        background-color: #000;
        color: $clr1;
        height: 2.5rem;
        width: 100%;

        &:hover {
            background-color: $clr-font-dark;
        }
    }
}

// Mixin for removing hover efects on iphone screen
@mixin hover-supported {
    @media not all and (pointer: coarse) {
        &:hover {
            @include common-styles; // Include the common styles mixin here
        }
    }
}